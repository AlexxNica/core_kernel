;; config.h is created atomically by discover.sh to avoid a problem where gcc -MM on some
;; file that includes config.h reads a partial written file, and fails
(rule
 ((targets (config.h))
  (deps (discover.sh test.c))
  (action "./${<} ${OCAMLC} config.h")))

;; The idiom for base is `open Base`. Since this is not properly
;; supported at the moment, the implementation is in the library base0
;; and we have an unwrapped library `base` containing only `include
;; Base0.Std`.
(library
 ((name base0)
  (inline_tests ((javascript build_and_run)))
  (public_name core_kernel.base0)
  (libraries
   (fieldslib
    nums
    ppx_assert_lib
    ppx_hash_lib
    ppx_inline_test_lib
    sexplib
    typerep_lib
    variantslib))
  (c_flags (:standard -D_LARGEFILE64_SOURCE -mpopcnt))
  (library_flags (-cclib -lrt))
  (c_names
   ;; If you add c stubs in here, ask yourself this question: would it make sense/can it
   ;; be implemented under windows and in javascript? If not, perhaps this piece of code
   ;; should go in core instead, since base is supposed to be a portable library.
   (exn_stubs
    int_math_stubs
    heap_block_stubs))
  (preprocess (((pps (JANE_KERNEL -check-doc-comments)) All)))
  (preprocessor_deps (config.h))
  (js_of_ocaml ())))
