version = "$(pkg_version)"
description = "Industrial strength alternative to OCaml's standard library"
requires = "bin_prot core_kernel.base fieldslib num ppx_assert.runtime-lib ppx_bench.runtime-lib ppx_hash.runtime-lib ppx_inline_test.runtime-lib sexplib typerep variantslib"
archive(byte  ) = "core_kernel.cma"
archive(native) = "core_kernel.cmxa"
plugin(byte  ) = "core_kernel.cma"
plugin(native) = "core_kernel.cmxs"
exists_if = "core_kernel.cma"

package "base" (
  version = "$(pkg_version)"
  description = ""
  requires = "bin_prot core_kernel.base0 fieldslib ppx_assert.runtime-lib ppx_bench.runtime-lib ppx_hash.runtime-lib ppx_inline_test.runtime-lib sexplib typerep variantslib"
  archive(byte  ) = "base.cma"
  archive(native) = "base.cmxa"
  plugin(byte  ) = "base.cma"
  plugin(native) = "base.cmxs"
  exists_if = "base.cma"
)

package "base0" (
  version = "$(pkg_version)"
  description = ""
  requires = "bin_prot fieldslib num ppx_assert.runtime-lib ppx_bench.runtime-lib ppx_hash.runtime-lib ppx_inline_test.runtime-lib sexplib typerep variantslib"
  archive(byte  ) = "base0.cma"
  archive(native) = "base0.cmxa"
  plugin(byte  ) = "base0.cma"
  plugin(native) = "base0.cmxs"
  exists_if = "base0.cma"
)
